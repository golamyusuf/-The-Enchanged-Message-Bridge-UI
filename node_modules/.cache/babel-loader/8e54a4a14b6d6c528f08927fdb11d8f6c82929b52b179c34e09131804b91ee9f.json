{"ast":null,"code":"var _jsxFileName = \"D:\\\\GenWeb2\\\\FROM DEV COMMUNITY\\\\chat-app-master\\\\chat-app-master\\\\chat-ui\\\\src\\\\components\\\\Messages\\\\Messages.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = ({\n  messages,\n  currentUser\n}) => {\n  let renderMessage = message => {\n    const {\n      sender,\n      content,\n      color,\n      file\n    } = message;\n    const messageFromMe = currentUser.username === sender;\n    const className = messageFromMe ? \"Messages-message currentUser\" : \"Messages-message\";\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"avatar\",\n        style: {\n          backgroundColor: color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Message-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: sender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), file && renderFile(file)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  };\n  let renderFile = file => {\n    // Assuming `file` is an object with properties like `url`, `name`, and `type`\n    const {\n      url,\n      name,\n      type\n    } = file;\n\n    // If the file is an image, display it directly\n    if (type.startsWith('image/')) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url,\n          alt: name,\n          style: {\n            maxWidth: '100%',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    }\n    alert(\"File Found \" + file);\n    // For other file types, display a link to download or view\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-file\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        download: name,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"messages-list\",\n    children: messages.map(msg => renderMessage(msg))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_c = Messages;\nexport default Messages;\n\n// import React from 'react'\n\n// const Messages = ({ messages, currentUser }) => {\n\n//     let renderMessage = (message) => {\n//         const { sender, content, color } = message;\n//         const messageFromMe = currentUser.username === message.sender;\n//         const className = messageFromMe ? \"Messages-message currentUser\" : \"Messages-message\";\n//         return (\n//             <li className={className}>\n//                 <span\n//                     className=\"avatar\"\n//                     style={{ backgroundColor: color }}\n//                 />\n//                 <div className=\"Message-content\">\n//                     <div className=\"username\">\n//                         {sender}\n//                     </div>\n//                     <div className=\"text\">{content}</div>\n//                 </div>\n//             </li>\n//         );\n//     };\n\n//     return (\n//         <ul className=\"messages-list\">\n//             {messages.map(msg => renderMessage(msg))}\n//         </ul>\n//     )\n// }\n\n// export default Messages\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Messages","messages","currentUser","renderMessage","message","sender","content","color","file","messageFromMe","username","className","children","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","renderFile","id","url","name","type","startsWith","src","alt","maxWidth","height","alert","href","download","target","rel","map","msg","_c","$RefreshReg$"],"sources":["D:/GenWeb2/FROM DEV COMMUNITY/chat-app-master/chat-app-master/chat-ui/src/components/Messages/Messages.js"],"sourcesContent":["import React from 'react';\n\nconst Messages = ({ messages, currentUser }) => {\n\n    let renderMessage = (message) => {\n        const { sender, content, color, file } = message;\n        const messageFromMe = currentUser.username === sender;\n        const className = messageFromMe ? \"Messages-message currentUser\" : \"Messages-message\";\n\n        return (\n            <li className={className} key={message.id}>\n                <span\n                    className=\"avatar\"\n                    style={{ backgroundColor: color }}\n                />\n                <div className=\"Message-content\">\n                    <div className=\"username\">\n                        {sender}\n                    </div>\n                    <div className=\"text\">{content}</div>\n                    {file && renderFile(file)}\n                </div>\n            </li>\n        );\n    };\n\n    let renderFile = (file) => {\n        // Assuming `file` is an object with properties like `url`, `name`, and `type`\n        const { url, name, type } = file;\n\n        // If the file is an image, display it directly\n        if (type.startsWith('image/')) {\n            return (\n                <div className=\"message-file\">\n                    <img src={url} alt={name} style={{ maxWidth: '100%', height: 'auto' }} />\n                </div>\n            );\n        }\n        alert(\"File Found \"+file);\n        // For other file types, display a link to download or view\n        return (\n            <div className=\"message-file\">\n                <a href={url} download={name} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {name}\n                </a>\n            </div>\n        );\n    };\n\n    return (\n        <ul className=\"messages-list\">\n            {messages.map(msg => renderMessage(msg))}\n        </ul>\n    );\n}\n\nexport default Messages;\n\n// import React from 'react'\n\n// const Messages = ({ messages, currentUser }) => {\n\n//     let renderMessage = (message) => {\n//         const { sender, content, color } = message;\n//         const messageFromMe = currentUser.username === message.sender;\n//         const className = messageFromMe ? \"Messages-message currentUser\" : \"Messages-message\";\n//         return (\n//             <li className={className}>\n//                 <span\n//                     className=\"avatar\"\n//                     style={{ backgroundColor: color }}\n//                 />\n//                 <div className=\"Message-content\">\n//                     <div className=\"username\">\n//                         {sender}\n//                     </div>\n//                     <div className=\"text\">{content}</div>\n//                 </div>\n//             </li>\n//         );\n//     };\n\n//     return (\n//         <ul className=\"messages-list\">\n//             {messages.map(msg => renderMessage(msg))}\n//         </ul>\n//     )\n// }\n\n\n// export default Messages"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}