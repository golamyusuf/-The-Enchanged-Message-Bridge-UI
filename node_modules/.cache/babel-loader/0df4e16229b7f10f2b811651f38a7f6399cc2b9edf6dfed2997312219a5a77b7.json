{"ast":null,"code":"var _jsxFileName = \"D:\\\\GenWeb2\\\\The Enchanted Message Bridge\\\\The-Enchanteed-Message-Bridge-UI\\\\-The-Enchanged-Message-Bridge-UI\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SockJsClient from 'react-stomp';\nimport './App.css';\nimport Input from './components/Input/Input';\nimport LoginForm from './components/LoginForm';\nimport Messages from './components/Messages/Messages';\nimport chatAPI from './services/chatapi';\nimport { randomColor } from './utils/common';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'http://localhost:8080/ws-chat/';\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Fetch all messages when the component mounts\n    chatAPI.getMessages().then(response => {\n      setMessages(response.data);\n    }).catch(err => {\n      console.log('Error fetching messages:', err);\n    });\n  }, []);\n  let onConnected = () => {\n    console.log(\"Connected!!\");\n  };\n  let onMessageReceived = msg => {\n    console.log('New Message Received!!', msg);\n    setMessages(messages.concat(msg));\n  };\n  let onSendMessage = (msgText, file) => {\n    const formData = new FormData();\n    formData.append('sender', user.username);\n    formData.append('content', msgText);\n    if (file) {\n      formData.append('file', file);\n    }\n    chatAPI.sendMessage(formData).then(res => {\n      console.log('Sent', res);\n      // Optionally, you might want to refresh the message list after sending a message\n      // chatAPI.getMessages().then(response => setMessages(response.data));\n    }).catch(err => {\n      console.log('Error Occurred while sending message to API', err);\n    });\n  };\n  let handleLoginSubmit = username => {\n    console.log(username, \" Logged in..\");\n    setUser({\n      username: username,\n      color: randomColor()\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !!user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Logged in as: \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SockJsClient, {\n        url: SOCKET_URL,\n        topics: ['/topic/group'],\n        onConnect: onConnected,\n        onDisconnect: console.log(\"Disconnected!\"),\n        onMessage: msg => onMessageReceived(msg),\n        debug: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        currentUser: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onSendMessage: onSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      onSubmit: handleLoginSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MXq+zWzUhuxYY7IL8OHofoIEtag=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SockJsClient","Input","LoginForm","Messages","chatAPI","randomColor","jsxDEV","_jsxDEV","Fragment","_Fragment","SOCKET_URL","App","_s","messages","setMessages","user","setUser","getMessages","then","response","data","catch","err","console","log","onConnected","onMessageReceived","msg","concat","onSendMessage","msgText","file","formData","FormData","append","username","sendMessage","res","handleLoginSubmit","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","url","topics","onConnect","onDisconnect","onMessage","debug","currentUser","onSubmit","_c","$RefreshReg$"],"sources":["D:/GenWeb2/The Enchanted Message Bridge/The-Enchanteed-Message-Bridge-UI/-The-Enchanged-Message-Bridge-UI/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SockJsClient from 'react-stomp';\r\nimport './App.css';\r\nimport Input from './components/Input/Input';\r\nimport LoginForm from './components/LoginForm';\r\nimport Messages from './components/Messages/Messages';\r\nimport chatAPI from './services/chatapi';\r\nimport { randomColor } from './utils/common';\r\n\r\nconst SOCKET_URL = 'http://localhost:8080/ws-chat/';\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch all messages when the component mounts\r\n    chatAPI.getMessages()\r\n      .then(response => {\r\n        setMessages(response.data);\r\n      })\r\n      .catch(err => {\r\n        console.log('Error fetching messages:', err);\r\n      });\r\n  }, []);\r\n\r\n  let onConnected = () => {\r\n    console.log(\"Connected!!\");\r\n  }\r\n\r\n  let onMessageReceived = (msg) => {\r\n    console.log('New Message Received!!', msg);\r\n    setMessages(messages.concat(msg));\r\n  }\r\n\r\n  let onSendMessage = (msgText, file) => {\r\n    const formData = new FormData();\r\n    formData.append('sender', user.username);\r\n    formData.append('content', msgText);\r\n\r\n    if (file) {\r\n      formData.append('file', file);\r\n    }\r\n\r\n    chatAPI.sendMessage(formData)\r\n      .then(res => {\r\n        console.log('Sent', res);\r\n        // Optionally, you might want to refresh the message list after sending a message\r\n        // chatAPI.getMessages().then(response => setMessages(response.data));\r\n      })\r\n      .catch(err => {\r\n        console.log('Error Occurred while sending message to API', err);\r\n      });\r\n  }\r\n\r\n  let handleLoginSubmit = (username) => {\r\n    console.log(username, \" Logged in..\");\r\n\r\n    setUser({\r\n      username: username,\r\n      color: randomColor()\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!!user ?\r\n        (\r\n          <>\r\n            <div className=\"user-info\">\r\n              <h2>Logged in as: {user.username}</h2>\r\n            </div>\r\n            <SockJsClient\r\n              url={SOCKET_URL}\r\n              topics={['/topic/group']}\r\n              onConnect={onConnected}\r\n              onDisconnect={console.log(\"Disconnected!\")}\r\n              onMessage={msg => onMessageReceived(msg)}\r\n              debug={false}\r\n            />\r\n           \r\n            <Messages\r\n              messages={messages}\r\n              currentUser={user}\r\n            />\r\n            <Input onSendMessage={onSendMessage} />\r\n          </>\r\n        ) :\r\n        <LoginForm onSubmit={handleLoginSubmit} />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n \r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,aAAa;AACtC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,UAAU,GAAG,gCAAgC;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAK,OAAO,CAACa,WAAW,CAAC,CAAC,CAClBC,IAAI,CAACC,QAAQ,IAAI;MAChBL,WAAW,CAACK,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,GAAG,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIG,WAAW,GAAGA,CAAA,KAAM;IACtBF,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC5B,CAAC;EAED,IAAIE,iBAAiB,GAAIC,GAAG,IAAK;IAC/BJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEG,GAAG,CAAC;IAC1Cb,WAAW,CAACD,QAAQ,CAACe,MAAM,CAACD,GAAG,CAAC,CAAC;EACnC,CAAC;EAED,IAAIE,aAAa,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK;IACrC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEnB,IAAI,CAACoB,QAAQ,CAAC;IACxCH,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEJ,OAAO,CAAC;IAEnC,IAAIC,IAAI,EAAE;MACRC,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAC/B;IAEA3B,OAAO,CAACgC,WAAW,CAACJ,QAAQ,CAAC,CAC1Bd,IAAI,CAACmB,GAAG,IAAI;MACXd,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEa,GAAG,CAAC;MACxB;MACA;IACF,CAAC,CAAC,CACDhB,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEF,GAAG,CAAC;IACjE,CAAC,CAAC;EACN,CAAC;EAED,IAAIgB,iBAAiB,GAAIH,QAAQ,IAAK;IACpCZ,OAAO,CAACC,GAAG,CAACW,QAAQ,EAAE,cAAc,CAAC;IAErCnB,OAAO,CAAC;MACNmB,QAAQ,EAAEA,QAAQ;MAClBI,KAAK,EAAElC,WAAW,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEE,OAAA;IAAKiC,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjB,CAAC,CAAC1B,IAAI,gBAEHR,OAAA,CAAAE,SAAA;MAAAgC,QAAA,gBACElC,OAAA;QAAKiC,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBlC,OAAA;UAAAkC,QAAA,GAAI,gBAAc,EAAC1B,IAAI,CAACoB,QAAQ;QAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACNtC,OAAA,CAACP,YAAY;QACX8C,GAAG,EAAEpC,UAAW;QAChBqC,MAAM,EAAE,CAAC,cAAc,CAAE;QACzBC,SAAS,EAAEvB,WAAY;QACvBwB,YAAY,EAAE1B,OAAO,CAACC,GAAG,CAAC,eAAe,CAAE;QAC3C0B,SAAS,EAAEvB,GAAG,IAAID,iBAAiB,CAACC,GAAG,CAAE;QACzCwB,KAAK,EAAE;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eAEFtC,OAAA,CAACJ,QAAQ;QACPU,QAAQ,EAAEA,QAAS;QACnBuC,WAAW,EAAErC;MAAK;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACFtC,OAAA,CAACN,KAAK;QAAC4B,aAAa,EAAEA;MAAc;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACvC,CAAC,gBAELtC,OAAA,CAACL,SAAS;MAACmD,QAAQ,EAAEf;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzC,CAAC;AAEV,CAAC;AAAAjC,EAAA,CAjFKD,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AAmFT,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}