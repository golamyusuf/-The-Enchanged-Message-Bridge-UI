{"ast":null,"code":"var _jsxFileName = \"D:\\\\GenWeb2\\\\The Enchanted Message Bridge\\\\The-Enchanteed-Message-Bridge-UI\\\\-The-Enchanged-Message-Bridge-UI\\\\src\\\\components\\\\ConnectedUsers\\\\ConnectedUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { WebSocketProvider } from './contexts/WebSocketProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectedUsers = () => {\n  _s();\n  const {\n    clientRef\n  } = useWebSocket();\n  const [users, setUsers] = useState([]);\n  const onMessageReceived = msg => {\n    setUsers(msg);\n  };\n  useEffect(() => {\n    if (clientRef.current) {\n      clientRef.current.connect(); // Ensure client is connected\n    }\n  }, [clientRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connected Users:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), users.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users are connected.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(ConnectedUsers, \"SbRwyY1K2aIZch0AMt9e79DDNvY=\", true);\n_c = ConnectedUsers;\nexport default ConnectedUsers;\n\n// import React, { useState } from 'react';\n// import SockJsClient from 'react-stomp';\n\n// const SOCKET_URL = 'http://localhost:8080/ws-chat';\n\n// const ConnectedUsers = ({ username }) => {\n//     const [users, setUsers] = useState([]);\n\n//     const onMessageReceived = (msg) => {\n//         setUsers(msg);\n//     };\n\n//     return (\n//         <div>\n//             <h2>Connected Users:</h2>\n//             {users.length === 0 ? (\n//                 <p>No users are connected.</p>\n//             ) : (\n//                 <ul>\n//                     {users.map((user, index) => (\n//                         <li key={index}>{user}</li>\n//                     ))}\n//                 </ul>\n//             )}\n//             <SockJsClient\n//                 url={SOCKET_URL}\n//                 topics={['/topic/users']}\n//                 onMessage={onMessageReceived}\n//                 headers={{ 'X-User-Name': username }}  \n//                 debug={false}\n//             />\n//         </div>\n//     );\n// };\n\n// export default ConnectedUsers;\nvar _c;\n$RefreshReg$(_c, \"ConnectedUsers\");","map":{"version":3,"names":["React","useState","useEffect","WebSocketProvider","jsxDEV","_jsxDEV","ConnectedUsers","_s","clientRef","useWebSocket","users","setUsers","onMessageReceived","msg","current","connect","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","user","index","_c","$RefreshReg$"],"sources":["D:/GenWeb2/The Enchanted Message Bridge/The-Enchanteed-Message-Bridge-UI/-The-Enchanged-Message-Bridge-UI/src/components/ConnectedUsers/ConnectedUsers.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { WebSocketProvider } from './contexts/WebSocketProvider';\r\n\r\nconst ConnectedUsers = () => {\r\n    const { clientRef } = useWebSocket();\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const onMessageReceived = (msg) => {\r\n        setUsers(msg);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (clientRef.current) {\r\n            clientRef.current.connect(); // Ensure client is connected\r\n        }\r\n    }, [clientRef]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Connected Users:</h2>\r\n            {users.length === 0 ? (\r\n                <p>No users are connected.</p>\r\n            ) : (\r\n                <ul>\r\n                    {users.map((user, index) => (\r\n                        <li key={index}>{user}</li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConnectedUsers;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import SockJsClient from 'react-stomp';\r\n\r\n// const SOCKET_URL = 'http://localhost:8080/ws-chat';\r\n\r\n// const ConnectedUsers = ({ username }) => {\r\n//     const [users, setUsers] = useState([]);\r\n\r\n//     const onMessageReceived = (msg) => {\r\n//         setUsers(msg);\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Connected Users:</h2>\r\n//             {users.length === 0 ? (\r\n//                 <p>No users are connected.</p>\r\n//             ) : (\r\n//                 <ul>\r\n//                     {users.map((user, index) => (\r\n//                         <li key={index}>{user}</li>\r\n//                     ))}\r\n//                 </ul>\r\n//             )}\r\n//             <SockJsClient\r\n//                 url={SOCKET_URL}\r\n//                 topics={['/topic/users']}\r\n//                 onMessage={onMessageReceived}\r\n//                 headers={{ 'X-User-Name': username }}  \r\n//                 debug={false}\r\n//             />\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ConnectedUsers;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAU,CAAC,GAAGC,YAAY,CAAC,CAAC;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,iBAAiB,GAAIC,GAAG,IAAK;IAC/BF,QAAQ,CAACE,GAAG,CAAC;EACjB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZ,IAAIM,SAAS,CAACM,OAAO,EAAE;MACnBN,SAAS,CAACM,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IACjC;EACJ,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EAEf,oBACIH,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBV,KAAK,CAACW,MAAM,KAAK,CAAC,gBACfhB,OAAA;MAAAW,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE9Bf,OAAA;MAAAW,QAAA,EACKN,KAAK,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBnB,OAAA;QAAAW,QAAA,EAAiBO;MAAI,GAAZC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACb,EAAA,CA5BID,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AA8BpB,eAAeA,cAAc;;AAG7B;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}