{"ast":null,"code":"var _jsxFileName = \"D:\\\\GenWeb2\\\\The Enchanted Message Bridge\\\\The-Enchanteed-Message-Bridge-UI\\\\enchanted-message-bridge-ui\\\\src\\\\components\\\\Messages\\\\Messages.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = ({\n  messages,\n  currentUser\n}) => {\n  let renderMessage = message => {\n    const {\n      sender,\n      content,\n      color,\n      fileData,\n      originalFileName,\n      contentType\n    } = message;\n    const messageFromMe = currentUser.username === sender;\n    const className = messageFromMe ? \"Messages-message currentUser\" : \"Messages-message\";\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"avatar\",\n        style: {\n          backgroundColor: color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Message-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: sender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), fileData && renderFile(fileData, originalFileName, contentType)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  };\n  let renderFile = (fileData, fileName, fileType) => {\n    const fileURL = `data:${fileType};base64,${fileData}`;\n\n    // Handle image files\n    if (fileType.startsWith('image/')) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: fileURL,\n          alt: fileName,\n          style: {\n            maxWidth: '20%',\n            height: '50%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    }\n\n    // Handle PDF files\n    if (fileType === 'application/pdf') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-file\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: fileURL,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [\"View PDF: \", fileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    }\n\n    // Handle DOC/DOCX files\n    if (fileType === 'application/msword' || fileType === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-file\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: fileURL,\n          download: fileName,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [\"Download DOC: \", fileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    }\n\n    // Handle other file types\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-file\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: fileURL,\n        download: fileName,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: [\"Download \", fileName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"messages-list\",\n    children: messages.map(msg => renderMessage(msg))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Messages","messages","currentUser","renderMessage","message","sender","content","color","fileData","originalFileName","contentType","messageFromMe","username","className","children","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","renderFile","id","fileType","fileURL","startsWith","src","alt","maxWidth","height","href","target","rel","download","map","msg","_c","$RefreshReg$"],"sources":["D:/GenWeb2/The Enchanted Message Bridge/The-Enchanteed-Message-Bridge-UI/enchanted-message-bridge-ui/src/components/Messages/Messages.js"],"sourcesContent":["import React from 'react';\n\nconst Messages = ({ messages, currentUser }) => {\n\n    let renderMessage = (message) => {\n        const { sender, content, color, fileData, originalFileName, contentType } = message;\n        const messageFromMe = currentUser.username === sender;\n        const className = messageFromMe ? \"Messages-message currentUser\" : \"Messages-message\";\n\n        return (\n            <li className={className} key={message.id}>\n                <span\n                    className=\"avatar\"\n                    style={{ backgroundColor: color }}\n                />\n                <div className=\"Message-content\">\n                    <div className=\"username\">\n                        {sender}\n                    </div>\n                    <div className=\"text\">{content}</div>\n                    {fileData && renderFile(fileData, originalFileName, contentType)}\n                </div>\n            </li>\n        );\n    };\n\n    let renderFile = (fileData, fileName, fileType) => {\n        const fileURL = `data:${fileType};base64,${fileData}`;\n\n        // Handle image files\n        if (fileType.startsWith('image/')) {\n            return (\n                <div className=\"message-file\">\n                    <img src={fileURL} alt={fileName} style={{ maxWidth: '20%', height: '50%' }} />\n                </div>\n            );\n        }\n\n        // Handle PDF files\n        if (fileType === 'application/pdf') {\n            return (\n                <div className=\"message-file\">\n                    <a href={fileURL} target=\"_blank\" rel=\"noopener noreferrer\">\n                        View PDF: {fileName}\n                    </a>\n                </div>\n            );\n        }\n\n        // Handle DOC/DOCX files\n        if (fileType === 'application/msword' || fileType === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') {\n            return (\n                <div className=\"message-file\">\n                    <a href={fileURL} download={fileName} target=\"_blank\" rel=\"noopener noreferrer\">\n                        Download DOC: {fileName}\n                    </a>\n                </div>\n            );\n        }\n\n        // Handle other file types\n        return (\n            <div className=\"message-file\">\n                <a href={fileURL} download={fileName} target=\"_blank\" rel=\"noopener noreferrer\">\n                    Download {fileName}\n                </a>\n            </div>\n        );\n    };\n     \n    return (\n        <ul className=\"messages-list\">\n            {messages.map(msg => renderMessage(msg))}\n        </ul>\n    );\n}\n\nexport default Messages; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAE5C,IAAIC,aAAa,GAAIC,OAAO,IAAK;IAC7B,MAAM;MAAEC,MAAM;MAAEC,OAAO;MAAEC,KAAK;MAAEC,QAAQ;MAAEC,gBAAgB;MAAEC;IAAY,CAAC,GAAGN,OAAO;IACnF,MAAMO,aAAa,GAAGT,WAAW,CAACU,QAAQ,KAAKP,MAAM;IACrD,MAAMQ,SAAS,GAAGF,aAAa,GAAG,8BAA8B,GAAG,kBAAkB;IAErF,oBACIZ,OAAA;MAAIc,SAAS,EAAEA,SAAU;MAAAC,QAAA,gBACrBf,OAAA;QACIc,SAAS,EAAC,QAAQ;QAClBE,KAAK,EAAE;UAAEC,eAAe,EAAET;QAAM;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACFrB,OAAA;QAAKc,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5Bf,OAAA;UAAKc,SAAS,EAAC,UAAU;UAAAC,QAAA,EACpBT;QAAM;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNrB,OAAA;UAAKc,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAER;QAAO;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACpCZ,QAAQ,IAAIa,UAAU,CAACb,QAAQ,EAAEC,gBAAgB,EAAEC,WAAW,CAAC;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC;IAAA,GAXqBhB,OAAO,CAACkB,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYrC,CAAC;EAEb,CAAC;EAED,IAAIC,UAAU,GAAGA,CAACb,QAAQ,EAAES,QAAQ,EAAEM,QAAQ,KAAK;IAC/C,MAAMC,OAAO,GAAG,QAAQD,QAAQ,WAAWf,QAAQ,EAAE;;IAErD;IACA,IAAIe,QAAQ,CAACE,UAAU,CAAC,QAAQ,CAAC,EAAE;MAC/B,oBACI1B,OAAA;QAAKc,SAAS,EAAC,cAAc;QAAAC,QAAA,eACzBf,OAAA;UAAK2B,GAAG,EAAEF,OAAQ;UAACG,GAAG,EAAEV,QAAS;UAACF,KAAK,EAAE;YAAEa,QAAQ,EAAE,KAAK;YAAEC,MAAM,EAAE;UAAM;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC;IAEd;;IAEA;IACA,IAAIG,QAAQ,KAAK,iBAAiB,EAAE;MAChC,oBACIxB,OAAA;QAAKc,SAAS,EAAC,cAAc;QAAAC,QAAA,eACzBf,OAAA;UAAG+B,IAAI,EAAEN,OAAQ;UAACO,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAlB,QAAA,GAAC,YAC9C,EAACG,QAAQ;QAAA;UAAAA,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAEd;;IAEA;IACA,IAAIG,QAAQ,KAAK,oBAAoB,IAAIA,QAAQ,KAAK,yEAAyE,EAAE;MAC7H,oBACIxB,OAAA;QAAKc,SAAS,EAAC,cAAc;QAAAC,QAAA,eACzBf,OAAA;UAAG+B,IAAI,EAAEN,OAAQ;UAACS,QAAQ,EAAEhB,QAAS;UAACc,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAlB,QAAA,GAAC,gBAC9D,EAACG,QAAQ;QAAA;UAAAA,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAEd;;IAEA;IACA,oBACIrB,OAAA;MAAKc,SAAS,EAAC,cAAc;MAAAC,QAAA,eACzBf,OAAA;QAAG+B,IAAI,EAAEN,OAAQ;QAACS,QAAQ,EAAEhB,QAAS;QAACc,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAlB,QAAA,GAAC,WACnE,EAACG,QAAQ;MAAA;QAAAA,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEd,CAAC;EAED,oBACIrB,OAAA;IAAIc,SAAS,EAAC,eAAe;IAAAC,QAAA,EACxBb,QAAQ,CAACiC,GAAG,CAACC,GAAG,IAAIhC,aAAa,CAACgC,GAAG,CAAC;EAAC;IAAAlB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEb,CAAC;AAAAgB,EAAA,GAzEKpC,QAAQ;AA2Ed,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}